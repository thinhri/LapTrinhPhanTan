
package test;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DichVu", targetNamespace = "http://Test/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DichVu {


    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Tich")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tich", targetNamespace = "http://Test/", className = "test.Tich")
    @ResponseWrapper(localName = "TichResponse", targetNamespace = "http://Test/", className = "test.TichResponse")
    @Action(input = "http://Test/DichVu/TichRequest", output = "http://Test/DichVu/TichResponse")
    public int tich(
        @WebParam(name = "a", targetNamespace = "")
        int a,
        @WebParam(name = "b", targetNamespace = "")
        int b);

    /**
     * 
     * @return
     *     returns java.util.List<test.Nhanvienbean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getnv", targetNamespace = "http://Test/", className = "test.Getnv")
    @ResponseWrapper(localName = "getnvResponse", targetNamespace = "http://Test/", className = "test.GetnvResponse")
    @Action(input = "http://Test/DichVu/getnvRequest", output = "http://Test/DichVu/getnvResponse")
    public List<Nhanvienbean> getnv();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Test/", className = "test.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Test/", className = "test.HelloResponse")
    @Action(input = "http://Test/DichVu/helloRequest", output = "http://Test/DichVu/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<test.Sachbean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSach", targetNamespace = "http://Test/", className = "test.GetSach")
    @ResponseWrapper(localName = "getSachResponse", targetNamespace = "http://Test/", className = "test.GetSachResponse")
    @Action(input = "http://Test/DichVu/getSachRequest", output = "http://Test/DichVu/getSachResponse")
    public List<Sachbean> getSach();

    /**
     * 
     * @param key
     * @return
     *     returns java.util.List<test.Sachbean>
     */
    @WebMethod(operationName = "Timkiem")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Timkiem", targetNamespace = "http://Test/", className = "test.Timkiem")
    @ResponseWrapper(localName = "TimkiemResponse", targetNamespace = "http://Test/", className = "test.TimkiemResponse")
    @Action(input = "http://Test/DichVu/TimkiemRequest", output = "http://Test/DichVu/TimkiemResponse")
    public List<Sachbean> timkiem(
        @WebParam(name = "key", targetNamespace = "")
        String key);

}


package ltsocket;

import bean.sachbean;
import bo.KetNoibo;
import bo.loaibo;
import bo.sachbo;
import java.io.BufferedReader;
import java.io.FileReader;
import java.net.InetAddress;
import java.util.ArrayList;

/**
 *
 * @author USER
 */
public class FrmServer extends javax.swing.JFrame {
    sachbo sbo = new sachbo();
    KetNoibo kn = new KetNoibo();
    public class TuyenNhan extends Thread{
        public void run(){
            try {
                while (true){
                  String st = gn.Nhan();
                  String[] t=st.split("[:]");
                  String ipclient = t[0];
                  String cp=t[1];
                  String cp2=t[2];
                  String[] tach=cp.split("[;]");
                  if(cp.equals("/tm"))
                      gn.Gui("Môn học hệ phân tán", ipclient, 1260);
                  if(cp.equals("/ht"))    
                      gn.Gui(InetAddress.getLocalHost().getHostName(), ipclient, 1260);
                  if(cp.equals("/quit")){
                      gn.Gui("quit", ipclient, 1260);
                  }
                  if(cp.equals("/xskt")){
                      BufferedReader r = new BufferedReader(new FileReader("kqsx.txt"));
                      StringBuilder doc = new StringBuilder();
                      String line;
                      while((line = r.readLine()) != null){
                          doc.append(line).append(" ");
                      }
                      r.close();
                      gn.Gui(doc.toString(), ipclient, 1260);
                  }
                      
                  if(cp.equals("/notepad")){
                      try {
                          Runtime r = Runtime.getRuntime();
                          r.exec("notepad");
                      } catch (Exception e) {
                          e.printStackTrace();
                      }
                  }
                   if(cp.equals("/excel")){
                       try {
                           Runtime r = Runtime.getRuntime();
                           r.exec("C://ProgramData//Microsoft//Windows//Start Menu//Programs//EXCEL.EXE");
                       } catch (Exception e) {
                       }
                   }
                   if(tach[0].equals("/+")){ 
                       try {
                            int n=tach.length;
                            int max=(Integer.valueOf(tach[1]));
                            int min=(Integer.valueOf(tach[1]));
                            int sum=0;
                            int j=0;
                           for (int i=1; i<n; i++){
                               if(max<Integer.valueOf(tach[i]))
                                    max=Integer.valueOf(tach[i]);  
                               if(min>Integer.valueOf(tach[i]))
                                    min=Integer.valueOf(tach[i]);
                               sum+=Integer.valueOf(tach[i]); 
                               j++;
                           }
                           gn.Gui("Tong: " + String.valueOf(sum), ipclient, 1260);
                           gn.Gui("So lon nhat: " + String.valueOf(max), ipclient, 1260);
                           gn.Gui("So be nhat: " + String.valueOf(min), ipclient, 1260);
                           gn.Gui("So chu so Client gui len: " + String.valueOf(j), ipclient, 1260);
                       } catch (Exception e) {
                           e.printStackTrace();
                       }  
                   }
                   String sa=t[2];
                   if(cp2.equals(sa)){
                       
                       ArrayList<sachbean> ds =sbo.getsach();
                       try {
                            String s=sbo.getDSSach(ds,sa);
                            System.out.println(s);
                           
                            gn.Gui(""+ String.valueOf(s),ipclient, 1260);
                       } catch (Exception e) {
                           e.printStackTrace();
                       }
                   }
                  list1.add(st);
            }
            } catch (Exception e) {
            }
        }
    }
    /**
     * Creates new form FrmServer
     */
    public FrmServer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();
        txtIpServer = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtport = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        list1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel1.setText("IpServer");

        txtIpServer.setText("127.0.0.1");
        txtIpServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIpServerActionPerformed(evt);
            }
        });

        jLabel2.setText("Port");

        txtport.setText("1260");
        txtport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtportActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel3.setText("Server");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(txtIpServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(txtport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIpServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
GuiNhan gn = new GuiNhan();
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            kn.ketnoi();
            gn.MoCong(1261);
            new TuyenNhan().start();
        } catch (Exception e) {
            e.printStackTrace();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void txtIpServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIpServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIpServerActionPerformed

    private void txtportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtportActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        try {
            if(evt.getKeyCode()==10){
                String Ipclient = InetAddress.getLocalHost().getHostAddress();
                String data = Ipclient+":"+jTextField1.getText();
                gn.Gui(data, txtIpServer.getText(), Integer.parseInt(txtport.getText()));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.setProperty("file.encoding", "UTF-8");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private java.awt.List list1;
    private javax.swing.JTextField txtIpServer;
    private javax.swing.JTextField txtport;
    // End of variables declaration//GEN-END:variables
}

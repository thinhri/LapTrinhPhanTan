/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DatagramSocket;

import java.awt.*;
import java.awt.event.*;
import java.net.*;
import java.io.*;
import javax.swing.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author USER
 */
public class FrmClient extends javax.swing.JFrame {

    FileOutputStream f;
    int ktNhanfile = 0;
    GoiNhan gn = new GoiNhan();
    Thread tdnhanfile;
    int congmo=1261;
    int conggui=1260;
//Tạo ra 1 lớp tuyến đoạn để nhận thông báo và tên file

    public class ThreadGoiTinNhan extends Thread {

        public void run() {
            while (1 == 1) {//Lặp vô hạn để nhận thông báo
                try {
                    if (ktNhanfile == 0)//Nếu gửi thông báo
                    {
                        System.out.print("Dang cho:");
                        String dulieu = gn.Nhan();//Chờ và nhận dữ liệu gửi về
//Qui ước: nếu ký tự đầu là khoảng trắng là gửi thông báo
//Nếu 4 ký tự đầu là: “/tf:” là gửi tên file cần chuyển
                        if (dulieu.substring(0, 4).equals("/tf:")) {//Nếu người dùng gửi tên file
                            list1.add("Dang nhan file: " + dulieu);//Hiển thị tên file cần gửi
                            String TenFileNhan = dulieu.substring(4, dulieu.length());//Lấy tên file
                            f = new FileOutputStream("d:\\" + TenFileNhan);//Tạo ra 1 file có tên vừa nhận lưu vào ổ d
                            ktNhanfile = 1;//Bắt đầu nhận file
                            tdnhanfile = new Thread(new ThreadNhanFile());//Tạo ra tuyến đoạn để nhận file
                            tdnhanfile.start();//Bắt đầu tuyến đoạn -> bắt đầu nhận file
                        } else//Nếu gửi thông báo
                        {
                            list1.add(dulieu); //Hiển thị dữ liệu ra list1
                        }
                        System.out.print("Da nhan:");
                    }
                } catch (Exception loi) {
                    System.out.print(loi);
                }
            }
        }
    }//Kết thức lớp ThreadGoiTinNhan
//Tạo ra 1 lớp tuyến đoạn để nhận file, mỗi lần nhận tối đa 512 byte

    public class ThreadNhanFile extends Thread {

        public void run() {
            try {
                while (true) {//Nếu còn dữ liệu để nhận
                    if (ktNhanfile == 1)//Nếu đang nhận file
                    {
                        txtGoi.enable(false);//Không cho người dùng gõ thông báo
                        byte[] buff = new byte[512];//Tạo bộ đệm để nhận
                        buff = gn.NhanByte();//Nhận về 1 dãy các byte lưu vào buff
                        //Chuyển 1 dãy các byte sang chuỗi
                        String dl = new String(buff, 0, CoSo.DoDaiGoiTinNhan);
                        if (dl.trim().equals("quit")) {//Nếu chuỗi nhận về là quit: kết thúc việc chuyển file
                            f.close();//Đóng và lưu file
                            ktNhanfile = 0;//Chuyển sang chế độ nhận thông báo
                            txtGoi.enable(true);//Cho phép gõ thông báo
                            list1.add("Da nhan file luu o o d:");//Hiển thị thông báo đã nhận file
                            tdnhanfile.stop();
                        } else {
                            f.write(buff, 0, CoSo.DoDaiGoiTinNhan);//Ghi dãy các byte từ buff vào file
                        }
                    }
                }
            } catch (Exception tt) {
                System.out.print(tt.getMessage());
            }
        }
    }//Kết thức lớp ThreadNhanfile

    /**
     * Creates new form FrmClient
     */
    public FrmClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtGoi = new javax.swing.JTextField();
        butGoi = new javax.swing.JButton();
        butGoiFile = new javax.swing.JButton();
        list1 = new java.awt.List();
        choice1 = new java.awt.Choice();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        BTDangKy = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        BTLuuTin = new javax.swing.JMenuItem();
        BTHienThiTin = new javax.swing.JMenuItem();
        BTDoiMK = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Chọn 1 tài khoản để nhắn tin");

        jButton1.setText("Nạp lại tên đăng nhập");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        butGoi.setText("Gửi tin");
        butGoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGoiActionPerformed(evt);
            }
        });

        butGoiFile.setText("Gửi file");
        butGoiFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGoiFileActionPerformed(evt);
            }
        });

        jMenu1.setText("Tài khoản");

        BTDangKy.setText("Đăng ký");
        BTDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTDangKyActionPerformed(evt);
            }
        });
        jMenu1.add(BTDangKy);

        jMenuItem2.setText("Thoát");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Thông tin cá nhân");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        BTLuuTin.setText("Lưu tin");
        BTLuuTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTLuuTinActionPerformed(evt);
            }
        });
        jMenu2.add(BTLuuTin);

        BTHienThiTin.setText("Hiển thị tin");
        BTHienThiTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTHienThiTinActionPerformed(evt);
            }
        });
        jMenu2.add(BTHienThiTin);

        BTDoiMK.setText("Đổi mật khẩu");
        BTDoiMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTDoiMKActionPerformed(evt);
            }
        });
        jMenu2.add(BTDoiMK);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(choice1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(txtGoi, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(butGoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butGoiFile)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butGoi)
                    .addComponent(butGoiFile))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTDangKyActionPerformed
        new FrmDangKy().setVisible(true);
        
    }//GEN-LAST:event_BTDangKyActionPerformed
    public void NapDuLIeuVaoChoice()//Nạp các tài khoản đang sử dụng vào choice
    {
        try {
            choice1.removeAll();//Xóa tất cả dữ liệu trên choice
            TaiKhoan tk = new TaiKhoan();
            ResultSet rs = tk.LayTaiKhoanDangKetNoi();//Lấy về các tài khoản đang sử dụng
            while (rs.next()) //Nạp vào choice
            {
                choice1.add(rs.getString("TenDangNhap"));
            }
            rs.close();
        } catch (Exception loi) {
            JOptionPane.showMessageDialog(this, loi.getMessage());
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        gn.MoCong(congmo);//Mở cổng 1261
        Thread tdnhan = new Thread(new ThreadGoiTinNhan());
        tdnhan.start();//Bắt đầu tuyến đoạn nhận thông báo
        NapDuLIeuVaoChoice();//Nạp dữ liệu vào choice
        this.setTitle("Xin chao: " + CoSo.TenDn);//Hiển thị tiêu đề của Frame
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        NapDuLIeuVaoChoice();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void butGoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGoiActionPerformed
        TaiKhoan tk = new TaiKhoan();
//Nếu tài khoản này đang dùng thì gửi thông báo
        if (tk.LayTrangThaiKetNoi(choice1.getSelectedItem()).equals("1")) {//Dựa vào tên đăng nhập để lấy Ip của máy cần gửi đến
            String IpMayGoiDen = tk.LayIp(choice1.getSelectedItem());
//Ký tự đầu tiên của thông báo là khoảng trắng, tiếp theo là tên tài khoản và thông báo
            String dulieugoi = "" + CoSo.TenDn + ":(" + tk.LayIp(CoSo.TenDn) + "):" + txtGoi.getText();
            gn.Goi(dulieugoi, IpMayGoiDen, conggui);//Gửi dữ liệu
        } else {
            JOptionPane.showMessageDialog(this, choice1.getSelectedItem() + "Da log out");
        }
    }//GEN-LAST:event_butGoiActionPerformed

    private void butGoiFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGoiFileActionPerformed
        try {
            //Mở cửa sổ để chọn file
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(this);//Hiển thị cửa sổ

            // chooser.getSelectedFile().getPath()): lấy đường dẫn và tên file vừa chọn
            // chooser.getSelectedFile()getName();//Lấy tên file vừa chọn
            TaiKhoan tk = new TaiKhoan();
            //Lấy Ip của máy cần gửi
            String IpMayGoiDen = tk.LayIp(choice1.getSelectedItem());
            //Mở file vừa chọn để đọc
            FileInputStream f = new FileInputStream(chooser.getSelectedFile().getPath());
            byte[] buff = new byte[512];//Tạo bộ đệm để chứa dữ liệu
            String tenfile = "/tf:" + chooser.getSelectedFile().getName();
            //Gửi tên file đi
            gn.Goi(tenfile, IpMayGoiDen, conggui);
            Thread.sleep(2);//Dừng chương trình lại 2/1000 giây
            int sb = f.read(buff);//Đọc file tối đa 512 byte, sb; chứa số byte đọc được 
            while (sb > 0) //Duyệt file
            {
                gn.GoiByte(buff, sb, IpMayGoiDen, conggui);//Gửi dữ liệu
                Thread.sleep(2);
                sb = f.read(buff, 0, buff.length);//Đọc tiếp dữ liệu
            }
            while (sb > 0);
            String st = new String("quit");//Kết thúc việc gửi
            gn.Goi("quit", IpMayGoiDen, conggui);//Gửi thông báo đã chuyển xong file
            f.close();
            System.out.print("Da goi");
        } catch (Exception tt) {
            System.out.print(tt);
        }
    }//GEN-LAST:event_butGoiFileActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        new FrmHienThiTin().setVisible(true);
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void BTLuuTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTLuuTinActionPerformed
        try {
            int j = 0;
            int ls = list1.getItemCount();
            for (int i = 0; i < ls; i++) {
                TaiKhoan tk = new TaiKhoan();
                String[] tach = list1.getItem(i).split("[:]");
                if (tk.LuuTinNhan(tach[0], tach[2]) == 1) {
                    j++;

                } else {
                    JOptionPane.showMessageDialog(this, "Luu tin khong thanh cong");
                }
            }
            if (j == ls) {
                JOptionPane.showMessageDialog(this, "Luu tin thanh cong");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_BTLuuTinActionPerformed

    private void BTHienThiTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTHienThiTinActionPerformed
        new FrmHienThiTin().setVisible(true);
    }//GEN-LAST:event_BTHienThiTinActionPerformed
    
    
    private void BTDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTDoiMKActionPerformed
        String tdn = CoSo.TenDn;
        FrmDoiMatKhau frm = new FrmDoiMatKhau(tdn);
        frm.setVisible(true);
    }//GEN-LAST:event_BTDoiMKActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BTDangKy;
    private javax.swing.JMenuItem BTDoiMK;
    private javax.swing.JMenuItem BTHienThiTin;
    private javax.swing.JMenuItem BTLuuTin;
    private javax.swing.JButton butGoi;
    private javax.swing.JButton butGoiFile;
    private java.awt.Choice choice1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private java.awt.List list1;
    private javax.swing.JTextField txtGoi;
    // End of variables declaration//GEN-END:variables
}
